# Defense SLAM System - Docker Compose Configuration
version: '3.8'

services:
  # Main Defense SLAM system
  defense-slam:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: defense-slam-main
    environment:
      - CLASSIFICATION_LEVEL=${CLASSIFICATION_LEVEL:-UNCLASSIFIED}
      - DEFENSE_MODE=true
      - UCI_ENABLED=${UCI_ENABLED:-false}
      - PX4_ENABLED=${PX4_ENABLED:-false}
      - OMS_ENABLED=${OMS_ENABLED:-false}
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
    volumes:
      - ./config:/workspace/config:ro
      - ./missions:/workspace/missions:ro
      - defense_logs:/workspace/logs
      - defense_data:/workspace/data
    ports:
      - "5555:5555"  # UCI Command Port
      - "5556:5556"  # UCI Telemetry Port
      - "14540:14540"  # PX4 MAVLink
      - "14541:14541"  # PX4 MAVLink FTP
    networks:
      - defense-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "ros2", "node", "list"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

  # Development environment with full tooling (enhanced for defense)
  slam-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: python-slam-dev
    volumes:
      - .:/workspace/src/python_slam
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - $HOME/.Xauthority:/root/.Xauthority:rw
      - defense_dev_logs:/workspace/logs
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - PYTHONPATH=/workspace/src/python_slam/src
      - CLASSIFICATION_LEVEL=UNCLASSIFIED
      - DEFENSE_MODE=false
      - ROS_DOMAIN_ID=${ROS_DOMAIN_ID:-0}
    network_mode: host
    stdin_open: true
    tty: true
    working_dir: /workspace/src/python_slam
    command: bash

  # Production environment for deployment
  slam-prod:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: python-slam-prod
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    network_mode: host
    restart: unless-stopped

  # Runtime environment for minimal deployment
  slam-runtime:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    container_name: python-slam-runtime
    volumes:
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
    environment:
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
    network_mode: host
    restart: unless-stopped

  # Jupyter notebook server for interactive development
  slam-jupyter:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: python-slam-jupyter
    ports:
      - "8888:8888"
    volumes:
      - .:/workspace/src/python_slam
    environment:
      - PYTHONPATH=/workspace/src/python_slam/src
    working_dir: /workspace/src/python_slam
    command: >
      bash -c "
        source /opt/ros/humble/setup.bash &&
        jupyter notebook --ip=0.0.0.0 --port=8888 --no-browser --allow-root --notebook-dir=/workspace/src/python_slam
      "

  # Testing environment
  slam-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: development
    container_name: python-slam-test
    volumes:
      - .:/workspace/src/python_slam
    environment:
      - PYTHONPATH=/workspace/src/python_slam/src
    working_dir: /workspace/src/python_slam
    command: >
      bash -c "
        source /opt/ros/humble/setup.bash &&
        python -m pytest tests/ -v --cov=src --cov-report=html --cov-report=term
      "

networks:
  defense-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    name: defense-slam-network
  default:
    driver: bridge

volumes:
  defense_logs:
    driver: local
    name: defense-slam-logs
  defense_data:
    driver: local
    name: defense-slam-data
  defense_dev_logs:
    driver: local
    name: defense-slam-dev-logs
  ros_logs:
    driver: local
